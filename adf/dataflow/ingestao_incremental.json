{
	"name": "ingestao_incremental",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "inboundplaytime",
						"type": "DatasetReference"
					},
					"name": "sourceplaytime"
				},
				{
					"dataset": {
						"referenceName": "inboundetails",
						"type": "DatasetReference"
					},
					"name": "sourcedetails"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "bronzeplaytime",
						"type": "DatasetReference"
					},
					"name": "sinkplaytime",
					"rejectedDataLinkedService": {
						"referenceName": "AzureDataLakeStorage",
						"type": "LinkedServiceReference"
					}
				},
				{
					"dataset": {
						"referenceName": "bronzedetails",
						"type": "DatasetReference"
					},
					"name": "sinkdetails"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          appid as string,",
				"          playtime_forever as string,",
				"          playtime_windows_forever as string,",
				"          playtime_mac_forever as string,",
				"          playtime_linux_forever as string,",
				"          playtime_deck_forever as string,",
				"          rtime_last_played as string,",
				"          playtime_disconnected as string,",
				"          playtime_2weeks as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     enableCdc: true,",
				"     mode: 'read',",
				"     skipInitialLoad: false,",
				"     documentForm: 'arrayOfDocuments') ~> sourceplaytime",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     enableCdc: true,",
				"     mode: 'read',",
				"     skipInitialLoad: false,",
				"     documentForm: 'singleDocument') ~> sourcedetails",
				"sourceplaytime sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sinkplaytime",
				"sourcedetails sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sinkdetails"
			]
		}
	}
}