{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nome do Data Factory",
			"defaultValue": "steamadf"
		},
		"AzureDataLakeStorage_accountKey": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'accountKey' de 'AzureDataLakeStorage'"
		},
		"AzureDatabricks_accessToken": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'accessToken' de 'AzureDatabricks'"
		},
		"AzureFunction_functionKey": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'functionKey' de 'AzureFunction'"
		},
		"AzureDataLakeStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://steamstorageaccount.dfs.core.windows.net/"
		},
		"AzureFunction_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://appfuncsteam.azurewebsites.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-4456721162651321.1.azuredatabricks.net/",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks_accessToken')]"
					},
					"newClusterNodeType": "Standard_D4s_v3",
					"newClusterNumOfWorker": "1",
					"newClusterSparkConf": {
						"fs.azure.account.key.steamstorageaccount.dfs.core.windows.net": "{{secrets/steam-keyvault-scope/steam-storage-account-key-value}}"
					},
					"newClusterSparkEnvVars": {
						"PYSPARK_PYTHON": "/databricks/python3/bin/python3"
					},
					"newClusterVersion": "16.4.x-scala2.12",
					"clusterOption": "Fixed",
					"newClusterInitScripts": [],
					"dataSecurityMode": "SINGLE_USER"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureFunction')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('AzureFunction_properties_typeProperties_functionAppUrl')]",
					"authentication": "Anonymous",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('AzureFunction_functionKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Docker-MySQL')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronzedetails')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "bronze/details",
						"fileSystem": "steam"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronzeplaytime')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "bronze/playtime",
						"fileSystem": "steam"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/inboundetails')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "inbound/details",
						"fileSystem": "steam"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/inboundplaytime')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "inbound/playtime",
						"fileSystem": "steam"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"appid": {
							"type": "integer"
						},
						"playtime_forever": {
							"type": "integer"
						},
						"playtime_windows_forever": {
							"type": "integer"
						},
						"playtime_mac_forever": {
							"type": "integer"
						},
						"playtime_linux_forever": {
							"type": "integer"
						},
						"playtime_deck_forever": {
							"type": "integer"
						},
						"rtime_last_played": {
							"type": "integer"
						},
						"playtime_disconnected": {
							"type": "integer"
						},
						"playtime_2weeks": {
							"type": "integer"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ingestao_incremental')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "inboundplaytime",
								"type": "DatasetReference"
							},
							"name": "sourceplaytime"
						},
						{
							"dataset": {
								"referenceName": "inboundetails",
								"type": "DatasetReference"
							},
							"name": "sourcedetails"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "bronzeplaytime",
								"type": "DatasetReference"
							},
							"name": "sinkplaytime",
							"rejectedDataLinkedService": {
								"referenceName": "AzureDataLakeStorage",
								"type": "LinkedServiceReference"
							}
						},
						{
							"dataset": {
								"referenceName": "bronzedetails",
								"type": "DatasetReference"
							},
							"name": "sinkdetails"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          appid as string,",
						"          playtime_forever as string,",
						"          playtime_windows_forever as string,",
						"          playtime_mac_forever as string,",
						"          playtime_linux_forever as string,",
						"          playtime_deck_forever as string,",
						"          rtime_last_played as string,",
						"          playtime_disconnected as string,",
						"          playtime_2weeks as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     enableCdc: true,",
						"     mode: 'read',",
						"     skipInitialLoad: false,",
						"     documentForm: 'arrayOfDocuments') ~> sourceplaytime",
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     enableCdc: true,",
						"     mode: 'read',",
						"     skipInitialLoad: false,",
						"     documentForm: 'singleDocument') ~> sourcedetails",
						"sourceplaytime sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sinkplaytime",
						"sourcedetails sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sinkdetails"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/inboundplaytime')]",
				"[concat(variables('factoryId'), '/datasets/inboundetails')]",
				"[concat(variables('factoryId'), '/datasets/bronzeplaytime')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage')]",
				"[concat(variables('factoryId'), '/datasets/bronzedetails')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_steam')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "playtime",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://appfuncsteam.azurewebsites.net/api/playtime?name=playtime"
						}
					},
					{
						"name": "DLT",
						"type": "DatabricksJob",
						"dependsOn": [
							{
								"activity": "External Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"jobId": "714447956434506"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "details",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://appfuncsteam.azurewebsites.net/api/details?name=details"
						}
					},
					{
						"name": "Ingesta-Incremental",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "details",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "playtime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ingestao_incremental",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceplaytime": {},
									"sourcedetails": {},
									"sinkplaytime": {},
									"sinkdetails": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continuationSettings": {
								"customizedCheckpointKey": "c3c2e665-ed8a-4d9d-ab66-dfce5d064d12"
							}
						}
					},
					{
						"name": "External Tables",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Ingesta-Incremental",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/felipegoraro@outlook.com/projeto_steam/src/bronze/external-data"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-08-21T13:05:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks')]",
				"[concat(variables('factoryId'), '/dataflows/ingestao_incremental')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger_steam')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline_steam",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2025-09-17T00:00:00",
						"timeZone": "E. South America Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								0
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline_steam')]"
			]
		}
	]
}